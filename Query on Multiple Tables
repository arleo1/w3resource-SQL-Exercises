/* SQL Exercises, Practice, Solution - Query on Multiple Tables
https://www.w3resource.com/sql-exercises/sql-exercises-quering-on-multiple-table.php */

Table: salesman

 salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12
        
 Table: customer
 
 customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005
        
 Table: orders 
 
 ord_no      purch_amt   ord_date    customer_id  salesman_id
----------  ----------  ----------  -----------  -----------
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001


1. Write a query to find those customers with their name and those salesmen with their name and city who lives in the same city. 

SELECT s.city, c.city, c.cust_name, s.name
FROM salesman AS s
INNER JOIN customer AS c 
ON s.city = c.city;


2. Write a SQL statement to find the names of all customers along with the salesmen who works for them.

SELECT c.cust_name, s.name
FROM salesman AS s
INNER JOIN customer AS c 
ON s.salesman_id = c.salesman_id;


3. Write a SQL statement to display all those orders by the customers not located in the same cities where their salesmen live. 

SELECT c.cust_name, o.ord_no
FROM salesman AS s, customer AS c, orders AS o
WHERE s.city <> c.city
AND o.customer_id = c.customer_id
AND o.salesman_id = s.salesman_id;


4. Write a SQL statement that finds out each order number followed by the name of the customers who made the order. 

SELECT o.ord_no, c.cust_name
FROM customer AS c
INNER JOIN orders AS o
ON c.customer_id = o.customer_id;


5. Write a SQL statement that sorts out the customer and their grade who made an order. Each of the customers must have a grade and served by at least a salesman, who belongs to a city.   

SELECT DISTINCT c.cust_name, c.grade
FROM customer AS c, orders AS o, salesman AS s
WHERE c.grade IS NOT NULL
AND s.city IS NOT NULL 
AND c.customer_id = o.customer_id
AND s.salesman_id = o.salesman_id;


6. Write a query that produces all customers with their name, city, salesman and commission, who served by a salesman and the salesman works at a rate of the commission within 12% to 14%.

SELECT c.cust_name, c.city, s.salesman_id, s.commission
FROM customer AS c, salesman AS s
WHERE s.commission BETWEEN 0.12 AND 0.14
AND s.salesman_id = c.salesman_id;


7. Write a SQL statement that produces all orders with the order number, customer name, commission rate and earned commission amount for those customers who carry their grade is 200 or more and served by an existing salesman.

SELECT DISTINCT o.ord_no, c.cust_name, s.commission AS "Commission%", CONCAT(s.commission * o.purch_amt) AS "Commission"
FROM customer AS c, salesman AS s, orders as o
WHERE c.grade >= 200
AND s.salesman_id = c.salesman_id
AND c.customer_id = o.customer_id;


8.Find all customers with orders on October 5, 2012.

SELECT c.cust_name
FROM customer AS c, salesman AS s, orders as o
WHERE o.ord_date = '2012-10-05'
AND c.customer_id = o.customer_id
AND s.salesman_id = c.salesman_id;
