/* SQL Exercises, Practice, Solution - Formatting Output
https://www.w3resource.com/sql-exercises/sql-fromatting-output-exercises.php */

Table: salesman

 salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12
        
Table: orders

ord_no      purch_amt   ord_date    customer_id  salesman_id
----------  ----------  ----------  -----------  -----------
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001

Table: customer

customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005


1. Write a SQL statement to display the commission with the percent sign ( % ) with salesman ID, name and city columns for all the salesmen. 

SELECT CONCAT((commission*100),'%') AS commission, salesman_id, name, city
FROM salesman;


2. Write a SQL statement to find out the number of orders booked for each day and display it in such a format like "For 2001-10-10 there are 15 orders".  

SELECT CONCAT('for ', ord_date, ' there are ', count(ord_no), ' orders') AS orders
FROM orders
GROUP BY ord_date;


3. Write a query to display the orders according to the order number arranged by ascending order. 

SELECT * FROM orders
ORDER BY ord_no;


4. Write a SQL statement to arrange the orders according to the order date in such a manner that the latest date will come first then previous dates. 

SELECT * FROM orders
ORDER BY ord_date DESC;


5. Write a SQL statement to display the orders with all information in such a manner that, the older order date will come first and the highest purchase amount of same day will come first. 

SELECT * FROM orders
ORDER BY ord_date, purch_amt DESC;


6. Write a SQL statement to display the customer name, city, and grade, etc. and the display will be arranged according to the smallest customer ID. 

SELECT *FROM customer
ORDER BY customer_id;


7. Write a SQL statement to make a report with salesman ID, order date and highest purchase amount in such an arrangement that, the smallest salesman ID will come first along with their smallest order date. 

SELECT salesman_id, ord_date, MAX(purch_amt)
FROM orders
GROUP BY 1, 2
ORDER BY 1, 2;


8. Write a SQL statement to display customer name, city and grade in such a manner that, the customer holding highest grade will come first.

SELECT cust_name, city, grade
FROM customer
WHERE grade IS NOT NULL
ORDER BY 3 DESC;


9. Write a SQL statement to make a report with customer ID in such a manner that, the largest number of orders booked by the customer will come first along with their highest purchase amount. 

SELECT customer_id, COUNT(ord_no), MAX(purch_amt) FROM orders
GROUP BY customer_id
ORDER BY COUNT(ord_no) DESC;


10. Write a SQL statement to make a report with order date in such a manner that, the latest order date will come last along with the total purchase amount and total commission (15% for all salesmen) for that date. 

SELECT SUM(purch_amt), ((SUM(purch_amt))*.15) AS commission
FROM orders
GROUP BY ord_date
ORDER BY ord_date;
