/* SQL Exercises, Practice, Solution - Wildcard and Special operators
https://www.w3resource.com/sql-exercises/sql-wildcard-special-operators.php */

Table: salesman

salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12
        
Table: customers

customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005
        
Table: orders
 
 ord_no      purch_amt   ord_date    customer_id  salesman_id
----------  ----------  ----------  -----------  -----------
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001

Table: testtable

col1
--------------------------
A001/DJ-402\44_/100/2015
A001_\DJ-402\44_/100/2015
A001_DJ-402-2014-2015
A002_DJ-401-2014-2015
A001/DJ_401
A001/DJ_402\44
A001/DJ_402\44\2015
A001/DJ-402%45\2015/200
A001/DJ_402\45\2015%100
A001/DJ_402%45\2015/300
A001/DJ-402\44

Table: emp_details

EMP_IDNO EMP_FNAME       EMP_LNAME         EMP_DEPT
--------- --------------- --------------- ----------
   127323 Michale         Robbin                  57
   526689 Carlos          Snares                  63
   843795 Enric           Dosio                   57
   328717 Jhon            Snares                  63
   444527 Joseph          Dosni                   47
   659831 Zanifer         Emily                   47
   847674 Kuleswar        Sitaraman               57
   748681 Henrey          Gabriel                 47
   555935 Alex            Manuel                  57
   539569 George          Mardy                   27
   733843 Mario           Saule                   63
   631548 Alan            Snappy                  27
   839139 Maria           Foster                  57
   
   
1. Write a SQL statement to find those salesmen with all information who come from the city either Paris or Rome.

SELECT * FROM salesman
WHERE city IN ('Paris', 'Rome');


2. Write a query to filter those salesmen with all information who comes from any of the cities Paris and Rome.

SELECT * FROM salesman
WHERE city IN ('Paris', 'Rome');


3. Write a query to produce a list of salesman_id, name, city and commission of each salesman who live in cities other than Paris and Rome. 

SELECT * FROM salesman
WHERE city NOT IN ('Paris', 'Rome');


4. Write a query to sort out those customers with all information whose ID value is within any of 3007, 3008 and 3009. 

SELECT * FROM customer
WHERE customer_id BETWEEN 3007 AND 3009;


5. Write a SQL statement to find those salesmen with all information who gets the commission within a range of 0.12 and 0.14.  

SELECT * FROM salesman
WHERE commission BETWEEN 0.12 AND 0.14;


6. Write a query to filter all those orders with all information which purchase amount value is within 
the range 500 and 4000 except those orders of purchase amount value 948.50 and 1983.43.

SELECT * FROM orders
WHERE purch_amt BETWEEN 500 AND 4000
AND NOT purch_amt IN (948.50, 1983.43);


7. Write a SQL statement to find those salesmen with all other information and name started with any letter within 'A' and 'L'.

SELECT * FROM salesman
WHERE name LIKE '[a-l]%';


8. Write a SQL statement to find those salesmen with all other information and name started with other than any latter within 'A' and 'L'.

SELECT * FROM salesman
WHERE name LIKE '[!a-l]%';


9. Write a SQL statement to find that customer with all information whose name begin with the letter 'B'.

SELECT * FROM customer
WHERE cust_name LIKE 'b%';


10. Write a SQL statement to find all those customers with all information whose names are ending with the letter 'n'. 

SELECT * FROM customer
WHERE cust_name LIKE '%n';


11. Write a SQL statement to find those salesmen with all information whose name containing the 1st character is 'N' and the 4th character is 'l' and rests may be any character.

SELECT * FROM salesman
WHERE name LIKE 'n__l%';


12. Write a SQL statement to find those rows from the table testtable which contain the escape character underscore ( _ ) in its column 'col1'.

SELECT * FROM testtable
WHERE col1 LIKE '%#_%' ESCAPE '#';


13. Write a SQL statement to find those rows from the table testtable which does not contain the character underscore ( _ ) in its column 'col1'.

SELECT * FROM testtable
WHERE col1 NOT LIKE '%#_%' ESCAPE '#';


14. Write a SQL statement to find those rows from the table testtable which contain the escape character ( / ) in its column 'col1'.

SELECT * FROM testtable
WHERE col1 LIKE '%/%';


15. Write a SQL statement to find those rows from the table testtable which does not contain the escape character ( / ) in its column 'col1'.

SELECT * FROM testtable
WHERE col1 NOT LIKE '%/%';


16. Write a SQL statement to find those rows from the table testtable which contain the string ( _/ ) in its column 'col1'.

SELECT * FROM testtable
WHERE col1 LIKE '%#_#/%' ESCAPE '#';


17. Write a SQL statement to find those rows from the table testtable which does not contain the string ( _/ ) in its column 'col1'. 

SELECT * FROM testtable
WHERE col1 NOT LIKE '%#_#/%' ESCAPE '#';


18. Write a SQL statement to find those rows from the table testtable which contain the character ( % ) in its column 'col1'. 

SELECT * FROM testtable
WHERE col1 LIKE '%#%%' ESCAPE '#';


19. Write a SQL statement to find those rows from the table testtable which does not contain the character ( % ) in its column 'col1'.

SELECT * FROM testtable
WHERE col1 NOT LIKE '%#%%' ESCAPE '#';


20. Write a SQL statement to find that customer with all information who does not get any grade except NULL.  

SELECT * FROM customer
WHERE grade IS NULL;


